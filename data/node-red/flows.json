[
    {
        "id": "0eedd753f361bb4c",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "ca954522561608c1",
        "type": "tab",
        "label": "CB",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "8eaf2a1c4660fc1e",
        "type": "mqtt-broker",
        "name": "",
        "broker": "host.docker.internal",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "1e34ffbd22e2f3bd",
        "type": "mqtt-broker",
        "name": "",
        "broker": "emqx",
        "port": "1883",
        "clientid": "node-red",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "bf168ec34ec5b2e6",
        "type": "tls-config",
        "name": "mqtt.happyswing.at",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "cacert.pem",
        "servername": "",
        "verifyservercert": false,
        "alpnprotocol": ""
    },
    {
        "id": "0618b9716c8e5dc0",
        "type": "mqtt-broker",
        "name": "mqtt.happyswing.at",
        "broker": "mqtt.happyswing.at",
        "port": "8883",
        "tls": "bf168ec34ec5b2e6",
        "clientid": "",
        "autoConnect": true,
        "usetls": true,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "5b32fc5c31804444",
        "type": "function",
        "z": "0eedd753f361bb4c",
        "name": "swings",
        "func": "const ts = msg.payload;\nconst swings = [\"s1\", \"s2\", \"s3\", \"s4\", \"s5\", \"s6\"];\n\nconst l = 2.5; // length of the swing in meters\nconst g = 9.81; // acceleration due to gravity in m/s^2\n\nlet msgs = [];\n\nfor (const swing of swings) {\n    let msg = {};\n    msg.topic = swing\n    msg.payload = {\n        'acc_x': 0,\n        'acc_y': 0,\n        'acc_z': g,\n        'rot_x': 0,\n        'rot_y': 0,\n        'rot_z': 0,\n        'ts': ts,\n    }\n\n    const start = flow.get(`${swing}_start`) || 0;\n    if (start != 0 && start <= ts) {\n        const theta0 = flow.get(`${swing}_theta0`) * Math.PI / 180 || 0.25 * Math.PI;  // convert to rad, default 45Â°\n        const t = (ts - start) / 1000; // convert to s\n\n        // calculate the current angle based on the time\n        const theta = theta0 * Math.cos(Math.sqrt(g / l) * t); \n\n        msg.payload['acc_x'] = -g * theta;\n        msg.payload['acc_z'] = g * Math.cos(theta);\n    }\n    msgs.push(msg)\n}\n\nreturn [msgs];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 220,
        "wires": [
            [
                "1596b1332cb2d325"
            ]
        ]
    },
    {
        "id": "7b0995ee4b6d7559",
        "type": "inject",
        "z": "0eedd753f361bb4c",
        "d": true,
        "name": "timer",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "0.1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 490,
        "y": 220,
        "wires": [
            [
                "5b32fc5c31804444"
            ]
        ]
    },
    {
        "id": "4148ff5d6e67e48d",
        "type": "inject",
        "z": "0eedd753f361bb4c",
        "name": "stop all",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 180,
        "y": 40,
        "wires": [
            [
                "846ebd6169832f52"
            ]
        ]
    },
    {
        "id": "846ebd6169832f52",
        "type": "function",
        "z": "0eedd753f361bb4c",
        "name": "set start",
        "func": "let swings = [\"s1\", \"s2\", \"s3\", \"s4\", \"s5\", \"s6\"];\nlet delay = 0.53; // delay between the start of the swings\n\nconst ts = msg.payload;\n\n// if swing is set in topic, start only one swing\nif (swings.includes(msg.topic)) {\n    swings = [ msg.topic ]\n    delay = 0\n}\nlet offset = 0.0;\nfor (const swing of swings) {\n    if (ts != 0) {\n        offset += delay*1000;\n    }\n    flow.set(`${swing}_start`, msg.payload + offset);\n};\n",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 120,
        "wires": []
    },
    {
        "id": "0734ed6cb09617b4",
        "type": "inject",
        "z": "0eedd753f361bb4c",
        "name": "start all",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 80,
        "wires": [
            [
                "846ebd6169832f52"
            ]
        ]
    },
    {
        "id": "cf635f5c75ae0532",
        "type": "inject",
        "z": "0eedd753f361bb4c",
        "name": "swing1",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "s1",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 160,
        "wires": [
            [
                "846ebd6169832f52"
            ]
        ]
    },
    {
        "id": "55bd937cfea2cf69",
        "type": "inject",
        "z": "0eedd753f361bb4c",
        "name": "swing2",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "s2",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 200,
        "wires": [
            [
                "846ebd6169832f52"
            ]
        ]
    },
    {
        "id": "9f57de12b689513f",
        "type": "inject",
        "z": "0eedd753f361bb4c",
        "name": "swing3",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "s3",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 240,
        "wires": [
            [
                "846ebd6169832f52"
            ]
        ]
    },
    {
        "id": "7c34c99afb75ecf7",
        "type": "inject",
        "z": "0eedd753f361bb4c",
        "name": "swing4",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "s4",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 280,
        "wires": [
            [
                "846ebd6169832f52"
            ]
        ]
    },
    {
        "id": "ccac2bf3eb2a9999",
        "type": "inject",
        "z": "0eedd753f361bb4c",
        "name": "swing5",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "s5",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 320,
        "wires": [
            [
                "846ebd6169832f52"
            ]
        ]
    },
    {
        "id": "b003ba2cee67833a",
        "type": "inject",
        "z": "0eedd753f361bb4c",
        "name": "swing6",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "s6",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 360,
        "wires": [
            [
                "846ebd6169832f52"
            ]
        ]
    },
    {
        "id": "1596b1332cb2d325",
        "type": "mqtt out",
        "z": "0eedd753f361bb4c",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0618b9716c8e5dc0",
        "x": 790,
        "y": 220,
        "wires": []
    },
    {
        "id": "b82e3be123c6e104",
        "type": "inject",
        "z": "0eedd753f361bb4c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "l1",
        "payload": "254",
        "payloadType": "num",
        "x": 670,
        "y": 400,
        "wires": [
            [
                "2f8c2635feec6e38"
            ]
        ]
    },
    {
        "id": "2f8c2635feec6e38",
        "type": "mqtt out",
        "z": "0eedd753f361bb4c",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0618b9716c8e5dc0",
        "x": 970,
        "y": 400,
        "wires": []
    },
    {
        "id": "2582279438e8dc90",
        "type": "inject",
        "z": "0eedd753f361bb4c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "l1",
        "payload": "85",
        "payloadType": "num",
        "x": 670,
        "y": 440,
        "wires": [
            [
                "2f8c2635feec6e38"
            ]
        ]
    },
    {
        "id": "353a8d8d98518b6b",
        "type": "function",
        "z": "0eedd753f361bb4c",
        "name": "function 1",
        "func": "const ts = msg.payload;\nconst swings = [\"l1\"];\n\nconst l = 2.5; // length of the swing in meters\nconst g = 9.81; // acceleration due to gravity in m/s^2\n\nlet msgs = [];\n\nfor (const swing of swings) {\n    let msg = {};\n    msg.topic = swing\n\n    const duration = 3\n    const lower = 85 \n    const high = 254\n    const scal = 2 * Math.PI / duration\n    const t = (ts/1000*scal)\n\n    msg.payload = Math.round ( ((Math.cos(t) + 1) / 2 ) * (high -lower) + lower )\n\n    msgs.push(msg)\n}\n \n\nreturn msgs;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 500,
        "wires": [
            [
                "2f8c2635feec6e38"
            ]
        ]
    },
    {
        "id": "f6869390d052cb39",
        "type": "inject",
        "z": "0eedd753f361bb4c",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "0.1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "l1",
        "payload": "",
        "payloadType": "date",
        "x": 620,
        "y": 500,
        "wires": [
            [
                "353a8d8d98518b6b"
            ]
        ]
    },
    {
        "id": "fde441519f1bcd99",
        "type": "ui_chart",
        "z": "ca954522561608c1",
        "name": "",
        "group": "",
        "order": 0,
        "width": 0,
        "height": 0,
        "label": "chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 510,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "a7f8cb778a6ebcc5",
        "type": "mqtt in",
        "z": "ca954522561608c1",
        "name": "",
        "topic": "sw-0",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "0618b9716c8e5dc0",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 290,
        "y": 260,
        "wires": [
            [
                "595e8b80b0f5bb56"
            ]
        ]
    },
    {
        "id": "595e8b80b0f5bb56",
        "type": "csv",
        "z": "ca954522561608c1",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 530,
        "y": 360,
        "wires": [
            [
                "686e7b2cf215fb09"
            ]
        ]
    },
    {
        "id": "686e7b2cf215fb09",
        "type": "file",
        "z": "ca954522561608c1",
        "name": "",
        "filename": "~/tmp/test.csv",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 760,
        "y": 360,
        "wires": [
            []
        ]
    }
]